# This is a basic workflow to help you get started with Actions
name: Java CI with Maven

on:
  - push
  - pull_request
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      
    - id: version_step
      run: echo "::set-output name=MY_VAR::ice"
      
    - uses: paulhatch/semantic-version@v3.3
      with:
        # The prefix to use to identify tags
        branch: "main"
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "src/my-service"
        # Named version, will be used as suffix for name version tag
        namespace: project-b
        # Indicate whether short tags like 'v1' should be supported. If false only full
        # tags like 'v1.0.0' will be recognized.
        short_tags: true
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true
      
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: maven-build-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          maven-build-
          maven
          
      
    - run: mvn install -DskipTests

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          target

  veracode:

    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - run: echo "${{ jobs.build.steps.version_step.outputs.MY_VAR }}"

  anchore:

    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - run: mvn test

  test_no_cache:

    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - run: mvn test

    - name: Publish Unit Test Results
      # You may pin to the exact commit or the version.
      # uses: EnricoMi/publish-unit-test-result-action@bb944a8122372f56a33b518757fbef4be5f6f54b
      uses: EnricoMi/publish-unit-test-result-action@v1.8
      with:
        # GitHub API Access Token
        #github_token: # default is ${{ github.token }}
        # Commit SHA to which test results are published. Only needed if the value of GITHUB_SHA does not work for you.
        #commit: # optional
        # Name of the created check run
        check_name: Sanity
        # Title of PR comments, defaults to value of check_name input
        comment_title: Action Results
        # File pattern of test result files
        files: '**/TEST-*.xml'
        # Individual runs of the same test may see different failures. Reports all individual failures when set "true" or the first only otherwise
        #report_individual_runs: # optional
        # De-duplicates classes with same name by their file name when set "true", combines test results for those classes otherwise
        #deduplicate_classes_by_file_name: # optional
        # Configures which earlier comments of the action to hide: off - no comments, orphaned commits - comments for commits that are removed from the branch, all but latest - all comments but the latest
        #hide_comments: # optional, default is all but latest
        # Control PR comments: false - disable PR comments, true - comment on PRs
        #comment_on_pr: # optional, default is true
        # Limits the number of removed or skipped tests listed on PR comments. This can be disabled with a value of 0. The default is 10.
        #test_changes_limit: # optional
        # Adds additional information to the check run (comma-separated list): all tests - list all found tests, skipped tests - list all skipped tests, none - no extra annotations at all
        #check_run_annotations: # optional, default is all tests, skipped tests
        # Adds check run annotations only on given branches. If not given, this defaults to the default branch of your repository, e.g. main or master. Comma separated list of branch names allowed, asterisk "*" matches all branches.
        #check_run_annotations_branch: # optional
        # Action logging level
        #log_level: # optional, default is INFO

  test_with_cache:

    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: maven-unittest-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          maven-unittest-
          maven-

    - run: mvn test


    - name: Archive test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-artiacts
        path: |
          target/**/TEST-*.xml

    - name: Publish Unit Test Results
      # You may pin to the exact commit or the version.
      # uses: EnricoMi/publish-unit-test-result-action@bb944a8122372f56a33b518757fbef4be5f6f54b
      uses: EnricoMi/publish-unit-test-result-action@v1.8
      with:
        # GitHub API Access Token
        #github_token: # default is ${{ github.token }}
        # Commit SHA to which test results are published. Only needed if the value of GITHUB_SHA does not work for you.
        #commit: # optional
        # Name of the created check run
        check_name: Sanity
        # Title of PR comments, defaults to value of check_name input
        comment_title: Action Results
        # File pattern of test result files
        files: '**/TEST-*.xml'
        # Individual runs of the same test may see different failures. Reports all individual failures when set "true" or the first only otherwise
        #report_individual_runs: # optional
        # De-duplicates classes with same name by their file name when set "true", combines test results for those classes otherwise
        #deduplicate_classes_by_file_name: # optional
        # Configures which earlier comments of the action to hide: off - no comments, orphaned commits - comments for commits that are removed from the branch, all but latest - all comments but the latest
        #hide_comments: # optional, default is all but latest
        # Control PR comments: false - disable PR comments, true - comment on PRs
        #comment_on_pr: # optional, default is true
        # Limits the number of removed or skipped tests listed on PR comments. This can be disabled with a value of 0. The default is 10.
        #test_changes_limit: # optional
        # Adds additional information to the check run (comma-separated list): all tests - list all found tests, skipped tests - list all skipped tests, none - no extra annotations at all
        #check_run_annotations: # optional, default is all tests, skipped tests
        # Adds check run annotations only on given branches. If not given, this defaults to the default branch of your repository, e.g. main or master. Comma separated list of branch names allowed, asterisk "*" matches all branches.
        #check_run_annotations_branch: # optional
        # Action logging level
        #log_level: # optional, default is INFO
  publish:

    runs-on: ubuntu-latest
    needs: [test_with_cache, test_no_cache, anchore, veracode]
    steps:
    - run : echo "Publish the stuff!"
